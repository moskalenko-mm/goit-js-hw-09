{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBAEN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3B,GAAIF,EAAMG,MAAQ,GAAKF,EAAKE,MAAQ,GAAKD,EAAOC,OAAS,EAEvD,YADAvB,EAAAwB,OAAOC,QAAQ,sCAIjBL,EAAQM,OAAON,EAAMG,OACrBI,QAAQC,IAAIR,GACZ,IAAK,IAAIS,EAAW,EAAGA,GAAYP,EAAOC,MAAOM,GAAY,EAC3D3B,EAAc2B,EAAUT,GACrBU,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBJ,EAAAwB,OAAOQ,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE1D8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBJ,EAAAwB,OAAOC,QAAQ,oBAAmCQ,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE5DgB,GAASM,OAAOL,EAAKE,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  let {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  if (delay.value < 0 || step.value < 0 || amount.value <= 0) {\n    Notify.failure('Please fill with positive numbers!');\n    return;\n  }\n\n  delay = Number(delay.value);\n  console.log(delay);\n  for (let position = 1; position <= amount.value; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(step.value);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","value","Notify","failure","Number","console","log","position1","then","param","success","concat","catch"],"version":3,"file":"03-promises.4e0219b9.js.map"}